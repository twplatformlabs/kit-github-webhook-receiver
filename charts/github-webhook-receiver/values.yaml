nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  name: ""
  annotations: {}

service:
  name: http
  type: ClusterIP
  portname: http
  port: 80
  protocol: TCP
  targetPort: 8000

virtualService:
  create: false
  # hosts:
  #   - "example.com"
  # gateways:
  #   - istio-system/example-com-gateway
  # matchUrl: /v1/github-webhook-receiver

image:
  repository: ghcr.io/twplatformlabs
  name: github-webhook-receiver
  tag: ""
  pullPolicy: IfNotPresent
  readiness: /v1/review/healthz
  liveness: /v1/review/healthz
  imagePullSecret: regcred

strategy:
  type: RollingUpdate
  rollingUpdate:
    maxSurge: 100%
    maxUnavailable: 50%

podSecurityContext: {}

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
  runAsGroup: 65532
  seccompProfile:
    type: RuntimeDefault
  capabilities:
    drop: ["ALL"]

resources:
  limits:
    cpu: 100m
    memory: 256Mi
  requests:
    cpu: 100m
    memory: 128Mi

# required for podDisruptionBudget
autoscaling:
  enabled: false
  # minReplicas: 1
  # maxReplicas: 3
  # utilizationMethod: memory
  # targetUtilizationPercentage: 80

affinity: {}

# Selecter example for Karpenter-managed arm64 node pool
nodeSelector:
  kubernetes.io/arch: arm64

tolerations: []

topologySpreadConstraints: {}

podDisruptionBudget:
  create: false
  # maxUnavailable: 1
